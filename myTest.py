
################################
################################
'''
a= []

a.append([3,4,5])
a.append([7,8,9])
print(a)

'''

################################
################################

'''
character_list = 'QAWd2hd2kfk'

word = word = ".".join(character_list)

print(word)

'''

################################
################################

'''

for i in[]:
    print(i)

else:
    print('go')

'''

################################
################################

'''
L = [['7', 2], ['6', 1], ['5', 1]]

print(L[0])

'''
################################
################################
'''
A = [1,2,34,45,5]
for x, y in zip(A[:-1], A[1:]):
    
    print(x, y)
'''
################################
################################

'''
import numpy as np

#A = np.array([[1,0,0,1],[1,1,0,1],[0,1,1,1],[0,0,1,0]])
#print(np.linalg.inv(A)) # 矩阵求逆

A = np.array([[0,1,1],[1,0,-3],[1,-3,0]])

C = np.array([[1,-0.5,3],[1,0.5,-1],[0,0,1]])

V = (C.T).dot(A).dot(C)
print(V)

#B = np.dot(C.transpose(), A)
#print(np.dot(B,C))

'''
################################
################################


'''
import numpy as np

C = np.array([[0.7,0.1],[0.1,0.3]])

a, b = np.linalg.eig(C)

print(a)
print(b)
'''

################################
################################
'''
import numpy as np
A = np.array([[1, 23, 67, 12, 4, 5, 9, 68]])
#print(A[:, 2:4])
#print(A[0:2])

y = np.random.uniform(2,3,1,10)
print(y)

'''
################################
################################
'''
import numpy as np
A = np.array([[1,2,3],[4,5,6],[7,8,9],[10,11,12]])
print(A.transpose((1,0)))
'''
################################
################################
'''
import numpy as np
A = np.arange(16)
#print(A)
B=A.reshape((1,1,4,4))
print(B)
print(B.shape)

'''
################################
################################

'''
import torch

x = torch.randn(2, 2)
print(x)
'''
################################
################################

'''
# 矩阵相乘，求逆
import numpy as np
A = np.array([[1, 0, 2,1], [-1, 2, 1,3], [1, 2, 5,5],[2, -2, 1,-2]])
#b = np.array([[0],[0],[0],[0]])
#x = np.linalg.solve(A, b)
#print(x)

D = np.array([[1, 0, -2,-1], [0, 1, -3/2,-2], [0, 0, 1,0],[0, 0, 0,1]])

C = (np.linalg.inv(D)).dot(A).dot(D)

#print(C)

'''
################################
################################

'''
# 将方程组的系数矩阵化为行阶梯最简形
from sympy import Matrix

A = Matrix([[1, 0, 2,1], [-1, 2, 1,3], [1, 2, 5,5],[2, -2, 1,-2]])

print(A.rref())

'''
################################
################################

'''
import random
i =list(range(10)) 
#print(list(range(10)))
#print(range(10))

random.shuffle(i)
print(i)

'''
################################
################################


'''
for i in range(0,100,10):
    print(i)
'''

################################
################################
